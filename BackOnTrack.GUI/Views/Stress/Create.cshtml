@model BackOnTrack.GUI.Models.Stress.CreateStressViewModel

<h4>CreateStressViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Result" class="control-label">Result:</label> <br />
                <input type="range" id="slider" name="Result" asp-for="Result" min="0" max="6" step="1" value="0" oninput="updateValue(this.value)" />
                <div id="selectedValue">None</div>
                <span asp-validation-for="Result" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="date" class="control-label"></label>
                <input type="date" asp-for="date" class="form-control" max="@DateTime.Today.ToString("yyyy-M-dd")" />
                <span asp-validation-for="date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function updateValue(value) {
            // Map the slider value to the enum values
            const enumValues = ['None', 'Very Low', 'Low', 'Medium', 'High', 'Very High', 'Extremely High'];
            const selectedValue = enumValues[value];

            // Update the displayed value
            document.getElementById('selectedValue').textContent = selectedValue;
        }
    </script>
    <script>
        $(document).ready(function () {
            // Check if TempData contains a success notification
            var FailedNotification = '@TempData["FailedCreation"]';

            if (FailedNotification) {
                // Use Toastr to display the success notification
                toastr.error(FailedNotification, "Notification");
            }
        });
    </script>
}
